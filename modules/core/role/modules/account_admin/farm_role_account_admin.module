<?php

/**
 * @file
 * Hooks implemented by the farmOS Account Admin Role module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_ENTITY_TYPE_access().
 */
function farm_role_account_admin_user_access(EntityInterface $entity, $operation, AccountInterface $account) {
  /** @var \Drupal\user\Entity\User $entity */
  /** @var \Drupal\user\Entity\User $account */

  // Only user 1 can access user 1.
  if ($entity->id() == 1 && $account->id() != 1) {
    return AccessResult::forbidden();
  }

  // Restrict access to users with the Account Admin role.
  if ($entity->hasRole('farm_account_admin')) {

    // Allow Account Admins to edit other Account Admins if they can
    // assign/revoke Account Admin role.
    if ($account->hasRole('farm_account_admin') && \Drupal::config('farm_role_account_admin.settings')->get('allow_peer_role_assignment', FALSE)) {
      return AccessResult::allowed();
    }

    return AccessResult::forbidden();
  }

  return AccessResult::neutral();
}
